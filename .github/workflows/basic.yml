# This is a basic workflow to help you get started with Actions

name: Basic

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build the container application
  build_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # For cross-platform
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # Build Docker image with Buildx and specify arm64 architecture
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: arm64
          push: false
          builder: ${{ steps.buildx.outputs.name }}
          tags: "tflite_example:latest"
          load: true

      # Upload artifact
      - name: Upload image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "tflite_example:latest"

  # Test the application
  test_app:
    # The type of runner that the job will run on
    runs-on: self-hosted
    # Trigger after image is built
    needs: build_image

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download artifact
      - name: Download image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "action_image_artifact_tflite_example:latest"

      # Run application
      - name: Run application
        run: |
          docker run -it --rm tflite_example


