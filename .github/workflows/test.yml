# This is workflow tests the application from the Docker image

name: Test

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Run the application
  run_app:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Download artifact
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: |
          docker pull ghcr.io/${{ github.actor }}/tflite_example:latest

      # Run application
      - name: Run application
        run: |
          docker run --rm ghcr.io/${{ github.actor }}/tflite_example:latest | tee app.out

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: app.out

  # Test the application output
  test_app:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: run_app

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

     # Download shell2junit
      - name: Checkout private tools
        uses: actions/checkout@v3
        with:
          repository: manolo/shell2junit
          path: shell2junit

      - name: Download output
        uses: actions/download-artifact@v3
        with:
          name: output

      - name: Unit tests
        run: |
          . shell2junit/sh2ju.sh
          ./test.sh

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/results/TEST-*.xml'

